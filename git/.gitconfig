[github]
	user = sax

[user]
	name = sax
	email = s.apostolico@gmail.com

[alias]
    st = status
    ci = commit
    br = branch
    co = checkout
    df = diff
		clean-branches = remote prune origin
		cb = remote prune origin
    squash= "!f() { if [ "$1" == ""];then echo 'Usage: git squash <number_of_commits>'; exit 1; fi; git rebase -i HEAD~$1;}; f"
    untracked = ls-files --others --exclude-standard
    ignored = status --ignored
    datetag = !git tag `date \"+%Y%m%d%H%M\"`
    ls = ls-files

# stash
    snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
    snapshots = !git stash list --grep snapshot


# branch
    b = branch -v # branch (verbose)

# diff
    d = diff # diff unstaged changes
    dc = diff --cached # diff staged changes
    last = diff HEAD^ # diff last committed change


# reset
    unstage = reset HEAD # remove files from index (tracking)
    uncommit = reset --soft HEAD^ # go back before last commit, with files in uncommitted state
    filelog = log -u # show changes to a file
    mt = mergetool # fire up the merge tool

# log
    lg = log -p
    lm = log --format=medium
    pl = log --pretty=oneline
    l = log --graph --date=short
    changes = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
    short = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
    changelog = log --pretty=format:\" * %s\"
    shortnocolor = log --pretty=format:\"%h %cr %cn %s\"
    lol = log --graph --decorate --pretty=oneline --abbrev-commit
    lola = log --graph --decorate --pretty=oneline --abbrev-commit --all

[color]
    ui = auto

[color "diff"]
    meta = blue bold
    frag = magenta bold
    old = red bold
    new = green bold

[color "branch"]
    current = yellow reverse
    local = yellow bold
    remote = green bold
    plain = red bold

[color "status"]
    added = green bold
    changed = yellow
    untracked = blue bold

[core]
    pager = less -R
    autocrlf = input
	  excludesfile = /Users/sax/.gitignore

[branch]
    autosetuprebase = always
	  autosetupmerge = true


[format]
  pretty = format:%C(blue)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C(blue)%s %C(magenta) [%an]%Creset

[help]
    autocorrect = 1

[hub]
    protocol = https

[merge]
  summary = true
  verbosity = 1
	tool = extMerge

[mergetool "extMerge"]
  cmd = extMerge "$BASE" "$LOCAL" "$REMOTE" "$MERGED"
  trustExitCode = false

[push]
    default = tracking

[diff "nodiff"]
    command = /usr/bin/true

# [filter "media"]
	required = true
	clean = git media clean %f
	smudge = git media smudge %f

# [difftool "sourcetree"]
	# cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	# path =

# [mergetool "sourcetree"]
	# cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	# trustExitCode = true

[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[diff "tool.p4merge"]
	cmd = /Applications/p4merge.app/Contents/MacOS/p4merge \"$LOCAL\" \"$REMOTE\"
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path =
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[credential]
[filter "media"]
	clean = git media clean %f
	smudge = git media smudge %f
	required = true
[credential]
	helper = osxkeychain
